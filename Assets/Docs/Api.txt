Half Lambert 光照模型
diffuse = _LightColor0.rgb * _Diffuse.rgb * (0.5 + 0.5*dot(worldNormal, worldLight))

Blinn-Phong 光照模型
specular = _LightColor0.rgb * _Specular.rgb * pow(0.5 + 0.5*dot(worldNormal, normalize(worldLightDir + WorldSpaceViewDir(objPos))), _Gloss)

将模型空间的顶点位置转换到裁剪空间，等同于 mul(UNITY_MATRIX_MVP, objPos)
float4 UnityObjectToClipPos(float4 objPos)

将模型空间的法线向量转换到世界空间，等同于 mul(objNormal, (float3x3)unity_World2Object)
float3 UnityObjectToWorldNormal(float3 objNormal)

将模型空间的方向向量转换到世界空间，等同于 mul((float3x3)unity_Object2World, objDir)
float3 UnityObjectToWorldDir(float3 objDir)

输入一个模型空间的顶点位置，获取世界空间中该点的观察方向
float3 WorldSpaceViewDir(float4 objPos)

输入一个模型空间的顶点位置，获取模型空间中该点的观察方向
float3 ObjectSpaceViewDir(float4 objPos)

宏定义，输入一组纹理坐标和纹理属性，获得变换后的纹理坐标
#define TRANSFORM_TEX(tex,name) (tex.xy * name##_ST.xy + name##_ST.zw)

宏定义，获得从模型空间转换到切线空间的变换矩阵 rotation, 调用该宏的函数必须使用名为 v 且包含 normal 和 tangent 变量的参数
TANGENT_SPACE_ROTATION

输入一个法线纹理的纹素值，获得对法线纹理采样后的法线
fixed3 UnpackNormal(fixed4 packedNormal)