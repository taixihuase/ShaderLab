Half Lambert 光照模型
diffuse = _LightColor0.rgb * _Diffuse.rgb * (0.5 + 0.5*dot(worldNormal, worldLight))

Blinn-Phong 光照模型
specular = _LightColor0.rgb * _Specular.rgb * pow(0.5 + 0.5*dot(worldNormal, normalize(worldLightDir + WorldSpaceViewDir(objPos))), _Gloss)

Schlick 菲涅耳近似等式
fresnel = _FresnelScale + (1 - _FresnelScale) * pow(1 - dot(worldView, worldNormal), 5)

副法线
worldBinormal = cross(worldNormal, worldTangent) * objTangent.w

切线空间到世界空间矩阵
Tangent2World = float3x3(worldTangent, worldBinormal, worldNormal)

将模型空间的顶点位置转换到裁剪空间，等同于 mul(UNITY_MATRIX_MVP, objPos)
float4 UnityObjectToClipPos(float4 objPos)

将模型空间的法线向量转换到世界空间，等同于 mul(objNormal, (float3x3)unity_World2Object)
float3 UnityObjectToWorldNormal(float3 objNormal)

将模型空间的方向向量转换到世界空间，等同于 mul((float3x3)unity_Object2World, objDir)
float3 UnityObjectToWorldDir(float3 objDir)

将模型空间的顶点位置转换到屏幕空间
float4 ComputeGrabScreenPos (float4 objPos)

输入一个世界空间的顶点位置，获取世界空间中该点到光源的光照方向
float3 UnityWorldSpaceLightDir(float3 worldPos)
输入一个模型空间的顶点位置，获取世界空间中该点到光源的光照方向
float3 WorldSpaceLightDir(float4 objPos)
输入一个模型空间的顶点位置，获取世界空间中该点到光源的光照方向
float3 ObjSpaceLightDir(float4 objPos)

输入一个世界空间的顶点位置，获取世界空间中该点的观察方向
float3 UnityWorldSpaceViewDir(float3 worldPos)
输入一个模型空间的顶点位置，获取世界空间中该点的观察方向
float3 WorldSpaceViewDir(float4 objPos)
输入一个模型空间的顶点位置，获取模型空间中该点的观察方向
float3 ObjSpaceViewDir(float4 objPos)

宏定义，输入一组纹理坐标和纹理属性，获得变换后的纹理坐标
#define TRANSFORM_TEX(tex,name) (tex.xy * name##_ST.xy + name##_ST.zw)

宏定义，获得从模型空间转换到切线空间的变换矩阵 rotation, 调用该宏的着色器函数必须使用名为 v 且包含 normal 和 tangent 变量的参数
TANGENT_SPACE_ROTATION

输入一个法线纹理的纹素值，获得对法线纹理采样后的法线
fixed3 UnpackNormal(fixed4 packedNormal)

开启或关闭深度缓存写入
ZWrite On/Off

设置颜色通道写入掩码，只写入 RGB 通道 | Alpha 通道 | 不写入 | RGBA 通道
ColorMask RGB | A | 0 | RGBA...

关闭混合
Blend Off

开启混合，设置混合因子、Alpha 通道混合因子
Blend SrcFactor DstFactor
Blend SrcFactor DstFactor, SrcFactorA DstFactorA

剔除背面 | 正面 | 关闭剔除
Cull Back | Front | Off

LIGHTING_COORDS(idx1, idx2)
用于片元结构体，定义名为 _LightCoord 语义为 TEXCOORD##idx1 的光照纹理，定义名为 _ShadowCoord 语义为 TEXCOORD##idx2的阴影纹理，该宏内已包含宏 SHADOW_COORDS

TRANSFER_VERTEX_TO_FRAGMENT(v2f)
用于顶点着色器，计算片元结构体中的衰减纹理和阴影纹理，调用该宏的着色器函数必须使用名为 v 且包含 vertex 变量的参数，该宏内已包含宏 TRANSFER_SHADOW

UNITY_LIGHT_ATTENUATION(atten, v2f, worldPos)
用于片元着色器，计算光照衰减和阴影，atten 作为计算结果返回, 第二参数为包含 _LightCoord 和 _ShadowCoord 变量的片元结构体

